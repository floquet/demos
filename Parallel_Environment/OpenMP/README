Simple OpenMP example.
----------------------

Copy these files to a subdirectory of your $HOME or $WORKDIR.

The C language program hello-OpenMP.c lists the node name and thread id for
each OpenMP thread.

This example shows how to compile the program using the Intel and Gnu compilers.

Execution in two different MPI environments is shown, MPT (SGI MPI) and
IMPI (Intel MPI).

The default MPI of topaz is MPT.  The "module list" command should show some
version of sgimpt, for example

> module list
Currently Loaded Modulefiles:
  1) mpi/sgimpt/2.12
  ...

To use Intel MPI the module swap command would be

module swap mpi/sgimpt mpi/intelmpi

The module names could also have a version number.

Before submitting a job, compile and link the program using one of the
following commands.

Intel compiler:

  icc -O3 -qopenmp -o hello-OpenMP_Intel hello-OpenMP.c

Gnu compiler:

  gcc -O3 -fopenmp -o hello-OpenMP hello-OpenMP.c

The optimization flag "-O3" is optional.  The Fortran flags to compile OpenMP
are the same as for C.

Executables compiled with either the Intel or Gnu compilers can be submitted
with either script hello-OpenMP.pbs or hello-OpenMP-Intel.pbs.  Notice that
the executable is launched with omplace in the default user MPI environment,
SGI MPT, but with mpirun or command line execution under the Intel programming
environment.  For SGI MPT, do not use mpirun to launch the job.

In the batch script, you will need also to change the account number to the
value assigned to your project.

Submit to topaz using the qsub command.

